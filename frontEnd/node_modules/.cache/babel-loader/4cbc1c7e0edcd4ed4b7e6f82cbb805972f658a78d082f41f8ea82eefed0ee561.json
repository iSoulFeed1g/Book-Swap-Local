{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vanja\\\\Desktop\\\\Vanja\\\\GitHub\\\\Book-Swap-Local\\\\frontEnd\\\\src\\\\Pages\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chat({\n  match\n}) {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const chatId = match.params.chatId;\n  const fetchMessages = () => {\n    axios.get(`http://localhost:8081/messages/${chatId}`).then(res => {\n      setMessages(res.data);\n    }).catch(err => {\n      console.error(\"Error fetching messages:\", err);\n    });\n  };\n  useEffect(() => {\n    fetchMessages();\n  }, [chatId]);\n  const handleSendMessage = e => {\n    e.preventDefault();\n    const user = JSON.parse(localStorage.getItem('user'));\n    const userEmail = user === null || user === void 0 ? void 0 : user.email;\n    axios.post('http://localhost:8081/messages', {\n      chat_id: chatId,\n      user_email: userEmail,\n      message: newMessage\n    }).then(res => {\n      setNewMessage('');\n      fetchMessages();\n    }).catch(err => {\n      console.error(\"Error sending message:\", err);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.user_email, \": \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this), msg.message]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSendMessage,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        placeholder: \"Type your message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n_s(Chat, \"ppYy//Iy9fHF0/R/fKleZlFUFyc=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Chat","match","_s","messages","setMessages","newMessage","setNewMessage","chatId","params","fetchMessages","get","then","res","data","catch","err","console","error","handleSendMessage","e","preventDefault","user","JSON","parse","localStorage","getItem","userEmail","email","post","chat_id","user_email","message","className","children","map","msg","index","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Vanja/Desktop/Vanja/GitHub/Book-Swap-Local/frontEnd/src/Pages/Chat.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './Chat.css';\r\n\r\nfunction Chat({ match }) {\r\n    const [messages, setMessages] = useState([]);\r\n    const [newMessage, setNewMessage] = useState('');\r\n    const chatId = match.params.chatId;\r\n\r\n    const fetchMessages = () => {\r\n        axios.get(`http://localhost:8081/messages/${chatId}`)\r\n            .then(res => {\r\n                setMessages(res.data);\r\n            })\r\n            .catch(err => {\r\n                console.error(\"Error fetching messages:\", err);\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchMessages();\r\n    }, [chatId]);\r\n\r\n    const handleSendMessage = (e) => {\r\n        e.preventDefault();\r\n        const user = JSON.parse(localStorage.getItem('user'));\r\n        const userEmail = user?.email;\r\n\r\n        axios.post('http://localhost:8081/messages', { chat_id: chatId, user_email: userEmail, message: newMessage })\r\n            .then(res => {\r\n                setNewMessage('');\r\n                fetchMessages();\r\n            })\r\n            .catch(err => {\r\n                console.error(\"Error sending message:\", err);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat-container\">\r\n            <div className=\"messages\">\r\n                {messages.map((msg, index) => (\r\n                    <div key={index} className=\"message\">\r\n                        <strong>{msg.user_email}: </strong>{msg.message}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <form onSubmit={handleSendMessage}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={newMessage}\r\n                    onChange={(e) => setNewMessage(e.target.value)}\r\n                    placeholder=\"Type your message...\"\r\n                />\r\n                <button type=\"submit\">Send</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}