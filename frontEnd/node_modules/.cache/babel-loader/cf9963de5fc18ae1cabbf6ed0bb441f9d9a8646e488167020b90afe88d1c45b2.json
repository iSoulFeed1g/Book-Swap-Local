{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vanja\\\\Desktop\\\\Vanja\\\\GitHub\\\\Book-Swap-Local\\\\frontEnd\\\\src\\\\Pages\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport './Chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const {\n    chat_id\n  } = useParams();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const userId = JSON.parse(localStorage.getItem('user')).id;\n  useEffect(() => {\n    axios.get(`http://localhost:8081/messages/${chat_id}`).then(response => {\n      setMessages(response.data);\n    }).catch(error => {\n      console.error('Failed to fetch messages', error);\n    });\n  }, [chat_id]);\n  const sendMessage = () => {\n    if (!newMessage.trim()) return;\n    const message = {\n      chat_id,\n      user_id: userId,\n      message: newMessage,\n      timestamp: new Date().toISOString()\n    };\n    axios.post('http://localhost:8081/sendMessage', message).then(response => {\n      setMessages([...messages, response.data]);\n      setNewMessage('');\n    }).catch(error => {\n      console.error('Failed to send message', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.user_id === userId ? 'sent' : 'received'}`,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: msg.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"send-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        placeholder: \"Type your message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(Chat, \"eIWdTJdUUyMq/YQBRslmRSYkrlE=\", false, function () {\n  return [useParams];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","axios","useParams","jsxDEV","_jsxDEV","Chat","_s","chat_id","messages","setMessages","newMessage","setNewMessage","userId","JSON","parse","localStorage","getItem","id","get","then","response","data","catch","error","console","sendMessage","trim","message","user_id","timestamp","Date","toISOString","post","className","children","map","msg","index","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Vanja/Desktop/Vanja/GitHub/Book-Swap-Local/frontEnd/src/Pages/Chat.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\nimport './Chat.css';\r\n\r\nconst Chat = () => {\r\n    const { chat_id } = useParams();\r\n    const [messages, setMessages] = useState([]);\r\n    const [newMessage, setNewMessage] = useState('');\r\n    const userId = JSON.parse(localStorage.getItem('user')).id;\r\n\r\n    useEffect(() => {\r\n        axios.get(`http://localhost:8081/messages/${chat_id}`)\r\n            .then(response => {\r\n                setMessages(response.data);\r\n            })\r\n            .catch(error => {\r\n                console.error('Failed to fetch messages', error);\r\n            });\r\n    }, [chat_id]);\r\n\r\n    const sendMessage = () => {\r\n        if (!newMessage.trim()) return;\r\n\r\n        const message = {\r\n            chat_id,\r\n            user_id: userId,\r\n            message: newMessage,\r\n            timestamp: new Date().toISOString()\r\n        };\r\n\r\n        axios.post('http://localhost:8081/sendMessage', message)\r\n            .then(response => {\r\n                setMessages([...messages, response.data]);\r\n                setNewMessage('');\r\n            })\r\n            .catch(error => {\r\n                console.error('Failed to send message', error);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat-container\">\r\n            <div className=\"messages\">\r\n                {messages.map((msg, index) => (\r\n                    <div key={index} className={`message ${msg.user_id === userId ? 'sent' : 'received'}`}>\r\n                        <p>{msg.message}</p>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <div className=\"send-message\">\r\n                <input\r\n                    type=\"text\"\r\n                    value={newMessage}\r\n                    onChange={(e) => setNewMessage(e.target.value)}\r\n                    placeholder=\"Type your message...\"\r\n                />\r\n                <button onClick={sendMessage}>Send</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAM;IAAEC;EAAQ,CAAC,GAAGL,SAAS,CAAC,CAAC;EAC/B,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAMY,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,CAACC,EAAE;EAE1DlB,SAAS,CAAC,MAAM;IACZE,KAAK,CAACiB,GAAG,CAAC,kCAAkCX,OAAO,EAAE,CAAC,CACjDY,IAAI,CAACC,QAAQ,IAAI;MACdX,WAAW,CAACW,QAAQ,CAACC,IAAI,CAAC;IAC9B,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IACpD,CAAC,CAAC;EACV,CAAC,EAAE,CAAChB,OAAO,CAAC,CAAC;EAEb,MAAMkB,WAAW,GAAGA,CAAA,KAAM;IACtB,IAAI,CAACf,UAAU,CAACgB,IAAI,CAAC,CAAC,EAAE;IAExB,MAAMC,OAAO,GAAG;MACZpB,OAAO;MACPqB,OAAO,EAAEhB,MAAM;MACfe,OAAO,EAAEjB,UAAU;MACnBmB,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;IACtC,CAAC;IAED9B,KAAK,CAAC+B,IAAI,CAAC,mCAAmC,EAAEL,OAAO,CAAC,CACnDR,IAAI,CAACC,QAAQ,IAAI;MACdX,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEY,QAAQ,CAACC,IAAI,CAAC,CAAC;MACzCV,aAAa,CAAC,EAAE,CAAC;IACrB,CAAC,CAAC,CACDW,KAAK,CAACC,KAAK,IAAI;MACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAClD,CAAC,CAAC;EACV,CAAC;EAED,oBACInB,OAAA;IAAK6B,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC3B9B,OAAA;MAAK6B,SAAS,EAAC,UAAU;MAAAC,QAAA,EACpB1B,QAAQ,CAAC2B,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACrBjC,OAAA;QAAiB6B,SAAS,EAAE,WAAWG,GAAG,CAACR,OAAO,KAAKhB,MAAM,GAAG,MAAM,GAAG,UAAU,EAAG;QAAAsB,QAAA,eAClF9B,OAAA;UAAA8B,QAAA,EAAIE,GAAG,CAACT;QAAO;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC,GADdJ,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACNrC,OAAA;MAAK6B,SAAS,EAAC,cAAc;MAAAC,QAAA,gBACzB9B,OAAA;QACIsC,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEjC,UAAW;QAClBkC,QAAQ,EAAGC,CAAC,IAAKlC,aAAa,CAACkC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC/CI,WAAW,EAAC;MAAsB;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CAAC,eACFrC,OAAA;QAAQ4C,OAAO,EAAEvB,WAAY;QAAAS,QAAA,EAAC;MAAI;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACnC,EAAA,CAxDID,IAAI;EAAA,QACcH,SAAS;AAAA;AAAA+C,EAAA,GAD3B5C,IAAI;AA0DV,eAAeA,IAAI;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}