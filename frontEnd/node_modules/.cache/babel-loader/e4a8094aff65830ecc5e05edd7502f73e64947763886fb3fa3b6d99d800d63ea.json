{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vanja\\\\Desktop\\\\Vanja\\\\GitHub\\\\Book-Swap-Local\\\\frontEnd\\\\src\\\\Pages\\\\Chat.js\",\n  _s = $RefreshSig$();\n// Chat.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const {\n    chatId\n  } = useParams();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    const userData = JSON.parse(localStorage.getItem('user'));\n    setUser(userData);\n  }, []);\n  useEffect(() => {\n    if (chatId) {\n      axios.get(`http://localhost:8081/messages/${chatId}`).then(res => {\n        setMessages(res.data);\n      }).catch(err => {\n        console.error(\"Error fetching messages:\", err);\n      });\n    }\n  }, [chatId]);\n  const handleSendMessage = () => {\n    if (!user) {\n      console.error(\"User not found\");\n      return;\n    }\n    const messageData = {\n      chat_id: chatId,\n      user_email: user.email,\n      message: newMessage\n    };\n    axios.post('http://localhost:8081/messages', messageData).then(res => {\n      setMessages(prevMessages => [...prevMessages, res.data]);\n      setNewMessage('');\n    }).catch(err => {\n      console.error(\"Error sending message:\", err);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: msg.user_email === user.email ? 'sent' : 'received',\n        children: msg.message\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newMessage,\n      onChange: e => setNewMessage(e.target.value),\n      placeholder: \"Type your message...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(Chat, \"iS4rXzYZeaxuPIQrl38FosZSjpk=\", false, function () {\n  return [useParams];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","jsxDEV","_jsxDEV","Chat","_s","chatId","messages","setMessages","newMessage","setNewMessage","user","setUser","userData","JSON","parse","localStorage","getItem","get","then","res","data","catch","err","console","error","handleSendMessage","messageData","chat_id","user_email","email","message","post","prevMessages","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","className","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Vanja/Desktop/Vanja/GitHub/Book-Swap-Local/frontEnd/src/Pages/Chat.js"],"sourcesContent":["// Chat.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst Chat = () => {\r\n    const { chatId } = useParams();\r\n    const [messages, setMessages] = useState([]);\r\n    const [newMessage, setNewMessage] = useState('');\r\n    const [user, setUser] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const userData = JSON.parse(localStorage.getItem('user'));\r\n        setUser(userData);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (chatId) {\r\n            axios.get(`http://localhost:8081/messages/${chatId}`)\r\n                .then(res => {\r\n                    setMessages(res.data);\r\n                })\r\n                .catch(err => {\r\n                    console.error(\"Error fetching messages:\", err);\r\n                });\r\n        }\r\n    }, [chatId]);\r\n\r\n    const handleSendMessage = () => {\r\n        if (!user) {\r\n            console.error(\"User not found\");\r\n            return;\r\n        }\r\n    \r\n        const messageData = {\r\n            chat_id: chatId,\r\n            user_email: user.email,\r\n            message: newMessage,\r\n        };\r\n    \r\n        axios.post('http://localhost:8081/messages', messageData)\r\n            .then(res => {\r\n                setMessages(prevMessages => [...prevMessages, res.data]);\r\n                setNewMessage('');\r\n            })\r\n            .catch(err => {\r\n                console.error(\"Error sending message:\", err);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Chat</h1>\r\n            <div>\r\n                {messages.map((msg, index) => (\r\n                    <div key={index} className={msg.user_email === user.email ? 'sent' : 'received'}>\r\n                        {msg.message}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <input \r\n                type=\"text\" \r\n                value={newMessage} \r\n                onChange={(e) => setNewMessage(e.target.value)} \r\n                placeholder=\"Type your message...\" \r\n            />\r\n            <button onClick={handleSendMessage}>Send</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}