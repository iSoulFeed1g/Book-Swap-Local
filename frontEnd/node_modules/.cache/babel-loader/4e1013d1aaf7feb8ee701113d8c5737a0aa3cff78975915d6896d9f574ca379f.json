{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vanja\\\\Desktop\\\\Vanja\\\\GitHub\\\\Book-Swap-Local\\\\frontEnd\\\\src\\\\Pages\\\\Inbox.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Inbox.css';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport Chat from './Chat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Inbox() {\n  _s();\n  const [chats, setChats] = useState([]);\n  const {\n    chatId\n  } = useParams(); // Get the chatId from the URL parameters\n  const [selectedChat, setSelectedChat] = useState(null);\n  const user = JSON.parse(localStorage.getItem('user'));\n  useEffect(() => {\n    if (user && user.id) {\n      axios.get(`http://localhost:8081/inbox/${user.id}`).then(res => {\n        setChats(res.data);\n        // Automatically select the chat if chatId is present\n        if (chatId) {\n          const chat = res.data.find(chat => chat.id === parseInt(chatId));\n          if (chat) {\n            setSelectedChat(chat);\n          }\n        }\n      }).catch(err => {\n        console.error(\"Error fetching inbox:\", err);\n      });\n    }\n  }, [user, chatId]);\n  const handleChatClick = chat => {\n    setSelectedChat(chat);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"inbox-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inbox-sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Inbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inbox-list\",\n        children: chats.map(chat => chat.name !== user.name && /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => handleChatClick(chat),\n          className: `inbox-item ${selectedChat && selectedChat.id === chat.id ? 'active' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `http://localhost:8081/${chat.profile_pic}`,\n            alt: chat.name,\n            className: \"inbox-profile-pic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inbox-text\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: chat.lastMessageSender === user.id ? \"\" : \"bold\",\n              children: chat.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"last-message\",\n              children: chat.lastMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 33\n          }, this)]\n        }, chat.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-area\",\n      children: selectedChat ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: selectedChat.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Chat, {\n          chatId: selectedChat.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"welcome-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Your messages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Send a message to start a chat.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n_s(Inbox, \"ikDwgdGi79gdX1Ude1dP/0DOzhk=\", false, function () {\n  return [useParams];\n});\n_c = Inbox;\nexport default Inbox;\nvar _c;\n$RefreshReg$(_c, \"Inbox\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","useParams","Chat","jsxDEV","_jsxDEV","Inbox","_s","chats","setChats","chatId","selectedChat","setSelectedChat","user","JSON","parse","localStorage","getItem","id","get","then","res","data","chat","find","parseInt","catch","err","console","error","handleChatClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","name","onClick","src","profile_pic","alt","lastMessageSender","lastMessage","_c","$RefreshReg$"],"sources":["C:/Users/Vanja/Desktop/Vanja/GitHub/Book-Swap-Local/frontEnd/src/Pages/Inbox.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './Inbox.css';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport Chat from './Chat';\r\n\r\nfunction Inbox() {\r\n    const [chats, setChats] = useState([]);\r\n    const { chatId } = useParams(); // Get the chatId from the URL parameters\r\n    const [selectedChat, setSelectedChat] = useState(null);\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n\r\n    useEffect(() => {\r\n        if (user && user.id) {\r\n            axios.get(`http://localhost:8081/inbox/${user.id}`)\r\n                .then(res => {\r\n                    setChats(res.data);\r\n                    // Automatically select the chat if chatId is present\r\n                    if (chatId) {\r\n                        const chat = res.data.find(chat => chat.id === parseInt(chatId));\r\n                        if (chat) {\r\n                            setSelectedChat(chat);\r\n                        }\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.error(\"Error fetching inbox:\", err);\r\n                });\r\n        }\r\n    }, [user, chatId]);\r\n\r\n    const handleChatClick = (chat) => {\r\n        setSelectedChat(chat);\r\n    };\r\n\r\n    return (\r\n        <div className=\"inbox-page\">\r\n            <div className=\"inbox-sidebar\">\r\n                <h1>Inbox</h1>\r\n                <div className=\"inbox-list\">\r\n                    {chats.map(chat => (\r\n                        chat.name !== user.name && (\r\n                            <div\r\n                                key={chat.id}\r\n                                onClick={() => handleChatClick(chat)}\r\n                                className={`inbox-item ${selectedChat && selectedChat.id === chat.id ? 'active' : ''}`}\r\n                            >\r\n                                <img src={`http://localhost:8081/${chat.profile_pic}`} alt={chat.name} className=\"inbox-profile-pic\" />\r\n                                <div className=\"inbox-text\">\r\n                                    <p className={chat.lastMessageSender === user.id ? \"\" : \"bold\"}>{chat.name}</p>\r\n                                    <p className=\"last-message\">{chat.lastMessage}</p>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            <div className=\"chat-area\">\r\n                {selectedChat ? (\r\n                    <div>\r\n                        <h2>{selectedChat.name}</h2>\r\n                        <Chat chatId={selectedChat.id} />\r\n                    </div>\r\n                ) : (\r\n                    <div className=\"welcome-message\">\r\n                        <h2>Your messages</h2>\r\n                        <p>Send a message to start a chat.</p>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Inbox;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}