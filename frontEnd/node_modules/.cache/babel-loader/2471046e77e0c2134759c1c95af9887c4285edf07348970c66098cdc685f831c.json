{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vanja\\\\Desktop\\\\Vanja\\\\GitHub\\\\Book-Swap-Local\\\\frontEnd\\\\src\\\\Pages\\\\Inbox.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Inbox.css';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Inbox() {\n  _s();\n  const [chats, setChats] = useState([]);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const user = JSON.parse(localStorage.getItem('user'));\n  const currentChatId = location.pathname.split('/chat/')[1];\n  useEffect(() => {\n    if (user && user.id) {\n      axios.get(`http://localhost:8081/inbox/${user.id}`).then(res => {\n        setChats(res.data);\n      }).catch(err => {\n        console.error(\"Error fetching inbox:\", err);\n      });\n    }\n  }, [user]);\n  const handleChatClick = chatId => {\n    navigate(`/chat/${chatId}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"inbox-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Inbox\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inbox-list\",\n      children: chats.map(chat => chat.name !== user.name && /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => handleChatClick(chat.id),\n        className: `inbox-item ${currentChatId == chat.id ? 'active' : ''}`,\n        children: chat.name\n      }, chat.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n_s(Inbox, \"J705183FWsI9N4hf0GQFlhxaywE=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = Inbox;\nexport default Inbox;\nvar _c;\n$RefreshReg$(_c, \"Inbox\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","useLocation","jsxDEV","_jsxDEV","Inbox","_s","chats","setChats","navigate","location","user","JSON","parse","localStorage","getItem","currentChatId","pathname","split","id","get","then","res","data","catch","err","console","error","handleChatClick","chatId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","chat","name","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Vanja/Desktop/Vanja/GitHub/Book-Swap-Local/frontEnd/src/Pages/Inbox.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './Inbox.css';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\n\r\nfunction Inbox() {\r\n    const [chats, setChats] = useState([]);\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    const currentChatId = location.pathname.split('/chat/')[1];\r\n\r\n    useEffect(() => {\r\n        if (user && user.id) {\r\n            axios.get(`http://localhost:8081/inbox/${user.id}`)\r\n                .then(res => {\r\n                    setChats(res.data);\r\n                })\r\n                .catch(err => {\r\n                    console.error(\"Error fetching inbox:\", err);\r\n                });\r\n        }\r\n    }, [user]);\r\n\r\n    const handleChatClick = (chatId) => {\r\n        navigate(`/chat/${chatId}`);\r\n    };\r\n\r\n    return (\r\n        <div className=\"inbox-container\">\r\n            <h1>Inbox</h1>\r\n            <div className=\"inbox-list\">\r\n                {chats.map(chat => (\r\n                    chat.name !== user.name && (\r\n                        <div\r\n                            key={chat.id}\r\n                            onClick={() => handleChatClick(chat.id)}\r\n                            className={`inbox-item ${currentChatId == chat.id ? 'active' : ''}`}\r\n                        >\r\n                            {chat.name}\r\n                        </div>\r\n                    )\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Inbox;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,aAAa;AACpB,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMW,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAMS,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAMS,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;EACrD,MAAMC,aAAa,GAAGN,QAAQ,CAACO,QAAQ,CAACC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE1DnB,SAAS,CAAC,MAAM;IACZ,IAAIY,IAAI,IAAIA,IAAI,CAACQ,EAAE,EAAE;MACjBnB,KAAK,CAACoB,GAAG,CAAC,+BAA+BT,IAAI,CAACQ,EAAE,EAAE,CAAC,CAC9CE,IAAI,CAACC,GAAG,IAAI;QACTd,QAAQ,CAACc,GAAG,CAACC,IAAI,CAAC;MACtB,CAAC,CAAC,CACDC,KAAK,CAACC,GAAG,IAAI;QACVC,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEF,GAAG,CAAC;MAC/C,CAAC,CAAC;IACV;EACJ,CAAC,EAAE,CAACd,IAAI,CAAC,CAAC;EAEV,MAAMiB,eAAe,GAAIC,MAAM,IAAK;IAChCpB,QAAQ,CAAC,SAASoB,MAAM,EAAE,CAAC;EAC/B,CAAC;EAED,oBACIzB,OAAA;IAAK0B,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC5B3B,OAAA;MAAA2B,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACd/B,OAAA;MAAK0B,SAAS,EAAC,YAAY;MAAAC,QAAA,EACtBxB,KAAK,CAAC6B,GAAG,CAACC,IAAI,IACXA,IAAI,CAACC,IAAI,KAAK3B,IAAI,CAAC2B,IAAI,iBACnBlC,OAAA;QAEImC,OAAO,EAAEA,CAAA,KAAMX,eAAe,CAACS,IAAI,CAAClB,EAAE,CAAE;QACxCW,SAAS,EAAE,cAAcd,aAAa,IAAIqB,IAAI,CAAClB,EAAE,GAAG,QAAQ,GAAG,EAAE,EAAG;QAAAY,QAAA,EAEnEM,IAAI,CAACC;MAAI,GAJLD,IAAI,CAAClB,EAAE;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKX,CAEZ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAAC7B,EAAA,CAzCQD,KAAK;EAAA,QAEOJ,WAAW,EACXC,WAAW;AAAA;AAAAsC,EAAA,GAHvBnC,KAAK;AA2Cd,eAAeA,KAAK;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}