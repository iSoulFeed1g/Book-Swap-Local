{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vanja\\\\Desktop\\\\Vanja\\\\GitHub\\\\Book-Swap-Local\\\\frontEnd\\\\src\\\\Pages\\\\Inbox.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport './Inbox.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Inbox() {\n  _s();\n  const [chats, setChats] = useState([]);\n  const navigate = useNavigate();\n  const user = JSON.parse(localStorage.getItem('user'));\n  useEffect(() => {\n    fetchChats();\n  }, []);\n  const fetchChats = async () => {\n    try {\n      const res = await axios.get(`http://localhost:8081/getChats/${user.id}`);\n      const chatData = await Promise.all(res.data.map(async chat => {\n        const otherUserId = chat.buyer_id === user.id ? chat.seller_id : chat.buyer_id;\n        const otherUserRes = await axios.get(`http://localhost:8081/getUserById/${otherUserId}`);\n        return {\n          ...chat,\n          otherUser: otherUserRes.data\n        };\n      }));\n\n      // Filter out duplicates based on other user's ID\n      const uniqueChats = chatData.reduce((acc, current) => {\n        const x = acc.find(item => item.otherUser.id === current.otherUser.id);\n        if (!x) {\n          return acc.concat([current]);\n        } else {\n          return acc;\n        }\n      }, []);\n      setChats(uniqueChats);\n    } catch (err) {\n      console.error(\"Error fetching chats:\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"inbox-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Inbox\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), chats.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No chats available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"chat-list\",\n      children: chats.map(chat => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => navigate(`/chat/${chat.id}`),\n        children: chat.otherUser.name\n      }, chat.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n_s(Inbox, \"L0STcbf/h6bsTznw8uKbylxDmV4=\", false, function () {\n  return [useNavigate];\n});\n_c = Inbox;\nexport default Inbox;\nvar _c;\n$RefreshReg$(_c, \"Inbox\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","Inbox","_s","chats","setChats","navigate","user","JSON","parse","localStorage","getItem","fetchChats","res","get","id","chatData","Promise","all","data","map","chat","otherUserId","buyer_id","seller_id","otherUserRes","otherUser","uniqueChats","reduce","acc","current","x","find","item","concat","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","onClick","name","_c","$RefreshReg$"],"sources":["C:/Users/Vanja/Desktop/Vanja/GitHub/Book-Swap-Local/frontEnd/src/Pages/Inbox.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './Inbox.css';\r\n\r\nfunction Inbox() {\r\n    const [chats, setChats] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n\r\n    useEffect(() => {\r\n        fetchChats();\r\n    }, []);\r\n\r\n    const fetchChats = async () => {\r\n        try {\r\n            const res = await axios.get(`http://localhost:8081/getChats/${user.id}`);\r\n            const chatData = await Promise.all(\r\n                res.data.map(async (chat) => {\r\n                    const otherUserId = chat.buyer_id === user.id ? chat.seller_id : chat.buyer_id;\r\n                    const otherUserRes = await axios.get(`http://localhost:8081/getUserById/${otherUserId}`);\r\n                    return { ...chat, otherUser: otherUserRes.data };\r\n                })\r\n            );\r\n\r\n            // Filter out duplicates based on other user's ID\r\n            const uniqueChats = chatData.reduce((acc, current) => {\r\n                const x = acc.find(item => item.otherUser.id === current.otherUser.id);\r\n                if (!x) {\r\n                    return acc.concat([current]);\r\n                } else {\r\n                    return acc;\r\n                }\r\n            }, []);\r\n\r\n            setChats(uniqueChats);\r\n        } catch (err) {\r\n            console.error(\"Error fetching chats:\", err);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"inbox-container\">\r\n            <h2>Inbox</h2>\r\n            {chats.length === 0 ? (\r\n                <p>No chats available</p>\r\n            ) : (\r\n                <ul className=\"chat-list\">\r\n                    {chats.map((chat) => (\r\n                        <li key={chat.id} onClick={() => navigate(`/chat/${chat.id}`)}>\r\n                            {chat.otherUser.name}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Inbox;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}