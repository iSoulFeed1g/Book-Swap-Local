{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vanja\\\\Desktop\\\\Vanja\\\\GitHub\\\\Book-Swap-Local\\\\frontEnd\\\\src\\\\Pages\\\\Inbox.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Inbox.css';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Inbox() {\n  _s();\n  const [chats, setChats] = useState([]);\n  const navigate = useNavigate();\n  const user = JSON.parse(localStorage.getItem('user'));\n  useEffect(() => {\n    if (user && user.id) {\n      axios.get(`http://localhost:8081/inbox/${user.id}`).then(res => {\n        setChats(res.data);\n      }).catch(err => {\n        console.error(\"Error fetching inbox:\", err);\n      });\n    }\n  }, [user]);\n  const handleChatClick = chatId => {\n    navigate(`/chat/${chatId}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"inbox-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Inbox\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inbox-list\",\n      children: chats.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No chats available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this) : chats.map(chat => chat.name !== user.name && /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => handleChatClick(chat.id),\n        className: `inbox-item ${chat.lastMessageSender !== user.name ? 'unread' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `http://localhost:8081/${chat.profile_pic}`,\n          alt: chat.name,\n          className: \"profile-pic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"chat-name\",\n            children: chat.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"chat-last-message\",\n            children: chat.lastMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 33\n        }, this)]\n      }, chat.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 29\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n_s(Inbox, \"L0STcbf/h6bsTznw8uKbylxDmV4=\", false, function () {\n  return [useNavigate];\n});\n_c = Inbox;\nexport default Inbox;\nvar _c;\n$RefreshReg$(_c, \"Inbox\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","Inbox","_s","chats","setChats","navigate","user","JSON","parse","localStorage","getItem","id","get","then","res","data","catch","err","console","error","handleChatClick","chatId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","chat","name","onClick","lastMessageSender","src","profile_pic","alt","lastMessage","_c","$RefreshReg$"],"sources":["C:/Users/Vanja/Desktop/Vanja/GitHub/Book-Swap-Local/frontEnd/src/Pages/Inbox.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './Inbox.css';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction Inbox() {\r\n    const [chats, setChats] = useState([]);\r\n    const navigate = useNavigate();\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n\r\n    useEffect(() => {\r\n        if (user && user.id) {\r\n            axios.get(`http://localhost:8081/inbox/${user.id}`)\r\n                .then(res => {\r\n                    setChats(res.data);\r\n                })\r\n                .catch(err => {\r\n                    console.error(\"Error fetching inbox:\", err);\r\n                });\r\n        }\r\n    }, [user]);\r\n\r\n    const handleChatClick = (chatId) => {\r\n        navigate(`/chat/${chatId}`);\r\n    };\r\n\r\n    return (\r\n        <div className=\"inbox-container\">\r\n            <h1>Inbox</h1>\r\n            <div className=\"inbox-list\">\r\n                {chats.length === 0 ? (\r\n                    <p>No chats available.</p>\r\n                ) : (\r\n                    chats.map(chat => (\r\n                        chat.name !== user.name && (\r\n                            <div key={chat.id} onClick={() => handleChatClick(chat.id)} className={`inbox-item ${chat.lastMessageSender !== user.name ? 'unread' : ''}`}>\r\n                                <img src={`http://localhost:8081/${chat.profile_pic}`} alt={chat.name} className=\"profile-pic\" />\r\n                                <div className=\"chat-info\">\r\n                                    <span className=\"chat-name\">{chat.name}</span>\r\n                                    <span className=\"chat-last-message\">{chat.lastMessage}</span>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    ))\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Inbox;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}