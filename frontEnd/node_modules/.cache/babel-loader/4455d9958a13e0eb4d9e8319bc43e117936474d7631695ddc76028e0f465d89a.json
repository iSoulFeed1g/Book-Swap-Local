{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\Vanja\\\\Git\\\\Book-Swap-Local\\\\frontEnd\\\\src\\\\Pages\\\\ChatModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './ChatModal.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatModal = ({\n  post,\n  user,\n  onClose\n}) => {\n  _s();\n  const [message, setMessage] = useState('');\n  const handleSendMessage = async () => {\n    if (!message.trim()) return;\n    try {\n      // Create or retrieve chat\n      const createChatResponse = await axios.post('http://localhost:8081/createChat', {\n        buyer_id: user.id,\n        seller_id: post.user_id\n      });\n      const {\n        chat_id\n      } = createChatResponse.data;\n\n      // Send message\n      await axios.post('http://localhost:8081/messages', {\n        chat_id,\n        user_email: user.email,\n        message\n      });\n      setMessage('');\n      onClose();\n      window.location.href = `/inbox?chat_id=${chat_id}`; // Redirect to the inbox with the specific chat open\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contact Seller\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-body\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          placeholder: \"Type your message...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary\",\n          onClick: onClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: handleSendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatModal, \"l8KXAebGu4sZHsyCIQX7P8si41w=\");\n_c = ChatModal;\nexport default ChatModal;\nvar _c;\n$RefreshReg$(_c, \"ChatModal\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ChatModal","post","user","onClose","_s","message","setMessage","handleSendMessage","trim","createChatResponse","buyer_id","id","seller_id","user_id","chat_id","data","user_email","email","window","location","href","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/PC/Desktop/Vanja/Git/Book-Swap-Local/frontEnd/src/Pages/ChatModal.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './ChatModal.css';\r\n\r\nconst ChatModal = ({ post, user, onClose }) => {\r\n    const [message, setMessage] = useState('');\r\n\r\n    const handleSendMessage = async () => {\r\n        if (!message.trim()) return;\r\n\r\n        try {\r\n            // Create or retrieve chat\r\n            const createChatResponse = await axios.post('http://localhost:8081/createChat', {\r\n                buyer_id: user.id,\r\n                seller_id: post.user_id\r\n            });\r\n\r\n            const { chat_id } = createChatResponse.data;\r\n\r\n            // Send message\r\n            await axios.post('http://localhost:8081/messages', {\r\n                chat_id,\r\n                user_email: user.email,\r\n                message\r\n            });\r\n\r\n            setMessage('');\r\n            onClose();\r\n            window.location.href = `/inbox?chat_id=${chat_id}`; // Redirect to the inbox with the specific chat open\r\n        } catch (error) {\r\n            console.error('Error sending message:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"modal-overlay\">\r\n            <div className=\"modal-content\">\r\n                <h2>Contact Seller</h2>\r\n                <h3>{post.title}</h3>\r\n                <div className=\"modal-body\">\r\n                    <textarea\r\n                        value={message}\r\n                        onChange={(e) => setMessage(e.target.value)}\r\n                        placeholder=\"Type your message...\"\r\n                    />\r\n                </div>\r\n                <div className=\"modal-actions\">\r\n                    <button className=\"btn btn-secondary\" onClick={onClose}>Close</button>\r\n                    <button className=\"btn btn-primary\" onClick={handleSendMessage}>Send</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatModal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}