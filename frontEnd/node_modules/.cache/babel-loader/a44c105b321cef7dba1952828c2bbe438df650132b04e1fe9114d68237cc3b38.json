{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vanja\\\\Desktop\\\\Vanja\\\\GitHub\\\\Book-Swap-Local\\\\frontEnd\\\\src\\\\Pages\\\\Inbox.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Inbox.css';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport Chat from './Chat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Inbox() {\n  _s();\n  const [chats, setChats] = useState([]);\n  const [selectedChat, setSelectedChat] = useState(null);\n  const {\n    chatId\n  } = useParams();\n  const navigate = useNavigate();\n  const user = JSON.parse(localStorage.getItem('user'));\n  useEffect(() => {\n    if (user && user.id) {\n      axios.get(`http://localhost:8081/inbox/${user.id}`).then(res => {\n        setChats(res.data);\n        if (chatId) {\n          const chat = res.data.find(chat => chat.id.toString() === chatId);\n          setSelectedChat(chat);\n        }\n      }).catch(err => {\n        console.error(\"Error fetching inbox:\", err);\n      });\n    }\n  }, [user, chatId]);\n  const handleChatClick = chat => {\n    setSelectedChat(chat);\n    navigate(`/inbox/${user.id}/chat/${chat.id}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"inbox-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inbox-list\",\n      children: chats.map(chat => chat.name !== user.name && /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => handleChatClick(chat),\n        className: \"inbox-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: chat.profile_pic,\n          alt: chat.name,\n          className: \"inbox-profile-pic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `inbox-item-name ${chat.lastMessageSender !== user.id ? 'unread' : ''}`,\n            children: chat.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inbox-item-message\",\n            children: chat.lastMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 29\n        }, this)]\n      }, chat.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: selectedChat ? /*#__PURE__*/_jsxDEV(Chat, {\n        chatId: selectedChat.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-messages\",\n        children: [\"Your messages\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 63\n        }, this), \"Send a message to start a chat.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_s(Inbox, \"ONP8UTki/QxXEsH6RXu286+TAAY=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Inbox;\nexport default Inbox;\nvar _c;\n$RefreshReg$(_c, \"Inbox\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","useParams","Chat","jsxDEV","_jsxDEV","Inbox","_s","chats","setChats","selectedChat","setSelectedChat","chatId","navigate","user","JSON","parse","localStorage","getItem","id","get","then","res","data","chat","find","toString","catch","err","console","error","handleChatClick","className","children","map","name","onClick","src","profile_pic","alt","fileName","_jsxFileName","lineNumber","columnNumber","lastMessageSender","lastMessage","_c","$RefreshReg$"],"sources":["C:/Users/Vanja/Desktop/Vanja/GitHub/Book-Swap-Local/frontEnd/src/Pages/Inbox.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './Inbox.css';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport Chat from './Chat';\r\n\r\nfunction Inbox() {\r\n    const [chats, setChats] = useState([]);\r\n    const [selectedChat, setSelectedChat] = useState(null);\r\n    const { chatId } = useParams();\r\n    const navigate = useNavigate();\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n\r\n    useEffect(() => {\r\n        if (user && user.id) {\r\n            axios.get(`http://localhost:8081/inbox/${user.id}`)\r\n                .then(res => {\r\n                    setChats(res.data);\r\n                    if (chatId) {\r\n                        const chat = res.data.find(chat => chat.id.toString() === chatId);\r\n                        setSelectedChat(chat);\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.error(\"Error fetching inbox:\", err);\r\n                });\r\n        }\r\n    }, [user, chatId]);\r\n\r\n    const handleChatClick = (chat) => {\r\n        setSelectedChat(chat);\r\n        navigate(`/inbox/${user.id}/chat/${chat.id}`);\r\n    };\r\n\r\n    return (\r\n        <div className=\"inbox-container\">\r\n            <div className=\"inbox-list\">\r\n                {chats.map(chat => (\r\n                    chat.name !== user.name && (\r\n                        <div key={chat.id} onClick={() => handleChatClick(chat)} className=\"inbox-item\">\r\n                            <img src={chat.profile_pic} alt={chat.name} className=\"inbox-profile-pic\" />\r\n                            <div>\r\n                                <div className={`inbox-item-name ${chat.lastMessageSender !== user.id ? 'unread' : ''}`}>{chat.name}</div>\r\n                                <div className=\"inbox-item-message\">{chat.lastMessage}</div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                ))}\r\n            </div>\r\n            <div className=\"chat-container\">\r\n                {selectedChat ? (\r\n                    <Chat chatId={selectedChat.id} />\r\n                ) : (\r\n                    <div className=\"no-messages\">Your messages<br/>Send a message to start a chat.</div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Inbox;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}