{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vanja\\\\Desktop\\\\Vanja\\\\GitHub\\\\Book-Swap-Local\\\\frontEnd\\\\src\\\\Pages\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport './Chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const {\n    chatId\n  } = useParams();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [chats, setChats] = useState([]);\n  const userId = localStorage.getItem('userId');\n  useEffect(() => {\n    if (!chatId) return;\n    const fetchMessages = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8081/messages/${chatId}`);\n        setMessages(response.data);\n      } catch (error) {\n        console.error('Error fetching messages:', error);\n      }\n    };\n    fetchMessages();\n  }, [chatId]);\n  useEffect(() => {\n    const fetchInbox = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8081/chats/${userId}`);\n        setChats(response.data);\n      } catch (error) {\n        console.error('Error fetching inbox:', error);\n      }\n    };\n    fetchInbox();\n  }, [userId]);\n  const handleSendMessage = async () => {\n    if (!newMessage.trim()) return;\n    try {\n      await axios.post(`http://localhost:8081/messages`, {\n        chat_id: chatId,\n        user_email: localStorage.getItem('userEmail'),\n        message: newMessage\n      });\n      setNewMessage('');\n      setMessages([...messages, {\n        user_name: 'You',\n        message: newMessage\n      }]);\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inbox-sidebar\",\n      children: chats.map(chat => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-item\",\n        onClick: () => handleChatClick(chat.seller_id),\n        children: chat.seller_name\n      }, chat.seller_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages\",\n        children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${message.user_name === 'You' ? 'sent' : 'received'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [message.user_name, \": \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this), message.message]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newMessage,\n          onChange: e => setNewMessage(e.target.value),\n          placeholder: \"Type your message...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n_s(Chat, \"D2DjoU8IVVPygr1OEkYjef+DbRI=\", false, function () {\n  return [useParams];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","axios","useParams","jsxDEV","_jsxDEV","Chat","_s","chatId","messages","setMessages","newMessage","setNewMessage","chats","setChats","userId","localStorage","getItem","fetchMessages","response","get","data","error","console","fetchInbox","handleSendMessage","trim","post","chat_id","user_email","message","user_name","className","children","map","chat","onClick","handleChatClick","seller_id","seller_name","fileName","_jsxFileName","lineNumber","columnNumber","index","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Vanja/Desktop/Vanja/GitHub/Book-Swap-Local/frontEnd/src/Pages/Chat.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\nimport './Chat.css';\r\n\r\nconst Chat = () => {\r\n    const { chatId } = useParams();\r\n    const [messages, setMessages] = useState([]);\r\n    const [newMessage, setNewMessage] = useState('');\r\n    const [chats, setChats] = useState([]);\r\n    const userId = localStorage.getItem('userId');\r\n\r\n    useEffect(() => {\r\n        if (!chatId) return;\r\n\r\n        const fetchMessages = async () => {\r\n            try {\r\n                const response = await axios.get(`http://localhost:8081/messages/${chatId}`);\r\n                setMessages(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching messages:', error);\r\n            }\r\n        };\r\n\r\n        fetchMessages();\r\n    }, [chatId]);\r\n\r\n    useEffect(() => {\r\n        const fetchInbox = async () => {\r\n            try {\r\n                const response = await axios.get(`http://localhost:8081/chats/${userId}`);\r\n                setChats(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching inbox:', error);\r\n            }\r\n        };\r\n\r\n        fetchInbox();\r\n    }, [userId]);\r\n\r\n    const handleSendMessage = async () => {\r\n        if (!newMessage.trim()) return;\r\n\r\n        try {\r\n            await axios.post(`http://localhost:8081/messages`, {\r\n                chat_id: chatId,\r\n                user_email: localStorage.getItem('userEmail'),\r\n                message: newMessage\r\n            });\r\n\r\n            setNewMessage('');\r\n            setMessages([...messages, { user_name: 'You', message: newMessage }]);\r\n        } catch (error) {\r\n            console.error('Error sending message:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat-container\">\r\n            <div className=\"inbox-sidebar\">\r\n                {chats.map((chat) => (\r\n                    <div key={chat.seller_id} className=\"chat-item\" onClick={() => handleChatClick(chat.seller_id)}>\r\n                        {chat.seller_name}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <div className=\"chat-content\">\r\n                <h1>Chat</h1>\r\n                <div className=\"messages\">\r\n                    {messages.map((message, index) => (\r\n                        <div key={index} className={`message ${message.user_name === 'You' ? 'sent' : 'received'}`}>\r\n                            <strong>{message.user_name}: </strong>{message.message}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <div className=\"new-message\">\r\n                    <input\r\n                        type=\"text\"\r\n                        value={newMessage}\r\n                        onChange={(e) => setNewMessage(e.target.value)}\r\n                        placeholder=\"Type your message...\"\r\n                    />\r\n                    <button onClick={handleSendMessage}>Send</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chat\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}