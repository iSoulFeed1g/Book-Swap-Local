{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vanja\\\\Desktop\\\\Vanja\\\\GitHub\\\\Book-Swap-Local\\\\frontEnd\\\\src\\\\Pages\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport './Chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chat() {\n  _s();\n  const {\n    chatId\n  } = useParams();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [chat, setChat] = useState(null);\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    const fetchChatData = async () => {\n      const userData = JSON.parse(localStorage.getItem('user'));\n      setUser(userData);\n      const chatResponse = await axios.get(`http://localhost:8081/chat/${chatId}`);\n      setChat(chatResponse.data);\n      const messagesResponse = await axios.get(`http://localhost:8081/messages?chat_id=${chatId}`);\n      setMessages(messagesResponse.data);\n    };\n    fetchChatData();\n  }, [chatId]);\n  const handleSendMessage = async () => {\n    if (newMessage.trim() === '') return;\n    const messageData = {\n      chat_id: chatId,\n      user_email: user.email,\n      message: newMessage\n    };\n    try {\n      await axios.post('http://localhost:8081/sendMessage', messageData);\n      setMessages([...messages, messageData]);\n      setNewMessage('');\n    } catch (error) {\n      console.error('Failed to send message', error);\n    }\n  };\n  if (!chat || !user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 16\n    }, this);\n  }\n  const otherUser = chat.buyer_id === user.id ? chat.seller : chat.buyer;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: `http://localhost:8081/${otherUser.profile_pic}`,\n        alt: otherUser.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: otherUser.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-list\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message-item ${message.user_email === user.email ? 'self' : 'other'}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: message.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"message-input\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        placeholder: \"Type a message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"send-button\",\n        onClick: handleSendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n_s(Chat, \"wfE+SeJBTEJ9tCA2kC3m3s9GhYk=\", false, function () {\n  return [useParams];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useParams","axios","jsxDEV","_jsxDEV","Chat","_s","chatId","messages","setMessages","newMessage","setNewMessage","chat","setChat","user","setUser","fetchChatData","userData","JSON","parse","localStorage","getItem","chatResponse","get","data","messagesResponse","handleSendMessage","trim","messageData","chat_id","user_email","email","message","post","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","otherUser","buyer_id","id","seller","buyer","className","src","profile_pic","alt","name","map","index","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Vanja/Desktop/Vanja/GitHub/Book-Swap-Local/frontEnd/src/Pages/Chat.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './Chat.css';\r\n\r\nfunction Chat() {\r\n    const { chatId } = useParams();\r\n    const [messages, setMessages] = useState([]);\r\n    const [newMessage, setNewMessage] = useState('');\r\n    const [chat, setChat] = useState(null);\r\n    const [user, setUser] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchChatData = async () => {\r\n            const userData = JSON.parse(localStorage.getItem('user'));\r\n            setUser(userData);\r\n\r\n            const chatResponse = await axios.get(`http://localhost:8081/chat/${chatId}`);\r\n            setChat(chatResponse.data);\r\n\r\n            const messagesResponse = await axios.get(`http://localhost:8081/messages?chat_id=${chatId}`);\r\n            setMessages(messagesResponse.data);\r\n        };\r\n\r\n        fetchChatData();\r\n    }, [chatId]);\r\n\r\n    const handleSendMessage = async () => {\r\n        if (newMessage.trim() === '') return;\r\n\r\n        const messageData = {\r\n            chat_id: chatId,\r\n            user_email: user.email,\r\n            message: newMessage,\r\n        };\r\n\r\n        try {\r\n            await axios.post('http://localhost:8081/sendMessage', messageData);\r\n            setMessages([...messages, messageData]);\r\n            setNewMessage('');\r\n        } catch (error) {\r\n            console.error('Failed to send message', error);\r\n        }\r\n    };\r\n\r\n    if (!chat || !user) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    const otherUser = chat.buyer_id === user.id ? chat.seller : chat.buyer;\r\n\r\n    return (\r\n        <div className=\"chat-container\">\r\n            <div className=\"chat-header\">\r\n                <img\r\n                    src={`http://localhost:8081/${otherUser.profile_pic}`}\r\n                    alt={otherUser.name}\r\n                />\r\n                <span>{otherUser.name}</span>\r\n            </div>\r\n            <div className=\"message-list\">\r\n                {messages.map((message, index) => (\r\n                    <div\r\n                        key={index}\r\n                        className={`message-item ${message.user_email === user.email ? 'self' : 'other'}`}\r\n                    >\r\n                        <div className=\"message-content\">{message.message}</div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <div className=\"message-input-container\">\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"message-input\"\r\n                    value={newMessage}\r\n                    onChange={(e) => setNewMessage(e.target.value)}\r\n                    placeholder=\"Type a message...\"\r\n                />\r\n                <button className=\"send-button\" onClick={handleSendMessage}>Send</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}