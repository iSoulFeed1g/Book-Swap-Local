{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vanja\\\\Desktop\\\\Vanja\\\\GitHub\\\\Book-Swap-Local\\\\frontEnd\\\\src\\\\Pages\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport './Chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const {\n    chat_id\n  } = useParams();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  useEffect(() => {\n    axios.get(`http://localhost:8081/messages/${chat_id}`).then(response => {\n      setMessages(response.data);\n    }).catch(error => {\n      console.error('Error fetching messages:', error);\n    });\n  }, [chat_id]);\n  const handleSendMessage = () => {\n    const user_email = JSON.parse(localStorage.getItem('user')).email;\n    axios.post('http://localhost:8081/send-message', {\n      chat_id,\n      user_email,\n      message: newMessage\n    }).then(response => {\n      setMessages([...messages, {\n        user_email,\n        message: newMessage\n      }]);\n      setNewMessage('');\n    }).catch(error => {\n      console.error('Error sending message:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: [msg.user_email, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this), \" \", msg.message]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        placeholder: \"Type your message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(Chat, \"eIWdTJdUUyMq/YQBRslmRSYkrlE=\", false, function () {\n  return [useParams];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","axios","useParams","jsxDEV","_jsxDEV","Chat","_s","chat_id","messages","setMessages","newMessage","setNewMessage","get","then","response","data","catch","error","console","handleSendMessage","user_email","JSON","parse","localStorage","getItem","email","post","message","className","children","map","msg","index","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Vanja/Desktop/Vanja/GitHub/Book-Swap-Local/frontEnd/src/Pages/Chat.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\nimport './Chat.css';\r\n\r\nconst Chat = () => {\r\n    const { chat_id } = useParams();\r\n    const [messages, setMessages] = useState([]);\r\n    const [newMessage, setNewMessage] = useState('');\r\n\r\n    useEffect(() => {\r\n        axios.get(`http://localhost:8081/messages/${chat_id}`)\r\n            .then(response => {\r\n                setMessages(response.data);\r\n            })\r\n            .catch(error => {\r\n                console.error('Error fetching messages:', error);\r\n            });\r\n    }, [chat_id]);\r\n\r\n    const handleSendMessage = () => {\r\n        const user_email = JSON.parse(localStorage.getItem('user')).email;\r\n        axios.post('http://localhost:8081/send-message', {\r\n            chat_id,\r\n            user_email,\r\n            message: newMessage\r\n        })\r\n            .then(response => {\r\n                setMessages([...messages, { user_email, message: newMessage }]);\r\n                setNewMessage('');\r\n            })\r\n            .catch(error => {\r\n                console.error('Error sending message:', error);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat-container\">\r\n            <div className=\"messages\">\r\n                {messages.map((msg, index) => (\r\n                    <div key={index} className=\"message\">\r\n                        <b>{msg.user_email}:</b> {msg.message}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <div className=\"message-input\">\r\n                <input\r\n                    type=\"text\"\r\n                    value={newMessage}\r\n                    onChange={(e) => setNewMessage(e.target.value)}\r\n                    placeholder=\"Type your message...\"\r\n                />\r\n                <button onClick={handleSendMessage}>Send</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}