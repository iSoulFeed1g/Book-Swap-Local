{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vanja\\\\Desktop\\\\Vanja\\\\GitHub\\\\Book-Swap-Local\\\\frontEnd\\\\src\\\\Pages\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport './Chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chat() {\n  _s();\n  const {\n    chatId\n  } = useParams();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const user = JSON.parse(localStorage.getItem('user'));\n  useEffect(() => {\n    fetchMessages();\n  }, [chatId]);\n  const fetchMessages = () => {\n    axios.get(`http://localhost:8081/getMessages/${chatId}`).then(res => {\n      console.log('Fetched messages:', res.data); // Debug log\n      setMessages(res.data);\n    }).catch(err => {\n      console.log('Error fetching messages:', err);\n    });\n  };\n  const sendMessage = () => {\n    if (newMessage.trim() === '') return;\n    const payload = {\n      chat_id: chatId,\n      user_email: user.email,\n      message: newMessage,\n      timestamp: new Date().toISOString()\n    };\n    axios.post('http://localhost:8081/sendMessage', payload).then(res => {\n      console.log('Message sent:', res.data); // Debug log\n      setMessages(prevMessages => [...prevMessages, res.data]);\n      setNewMessage('');\n    }).catch(err => {\n      console.log('Failed to send message', err);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: [message.user_email === user.email ? 'You' : message.user_email, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this), \" \", message.message]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        placeholder: \"Type your message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n_s(Chat, \"fIcN0wzzRCNQB1vKXQeTpRCiAq0=\", false, function () {\n  return [useParams];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","jsxDEV","_jsxDEV","Chat","_s","chatId","messages","setMessages","newMessage","setNewMessage","user","JSON","parse","localStorage","getItem","fetchMessages","get","then","res","console","log","data","catch","err","sendMessage","trim","payload","chat_id","user_email","email","message","timestamp","Date","toISOString","post","prevMessages","className","children","map","index","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Vanja/Desktop/Vanja/GitHub/Book-Swap-Local/frontEnd/src/Pages/Chat.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\nimport './Chat.css';\r\n\r\nfunction Chat() {\r\n    const { chatId } = useParams();\r\n    const [messages, setMessages] = useState([]);\r\n    const [newMessage, setNewMessage] = useState('');\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n\r\n    useEffect(() => {\r\n        fetchMessages();\r\n    }, [chatId]);\r\n\r\n    const fetchMessages = () => {\r\n        axios.get(`http://localhost:8081/getMessages/${chatId}`)\r\n            .then(res => {\r\n                console.log('Fetched messages:', res.data); // Debug log\r\n                setMessages(res.data);\r\n            })\r\n            .catch(err => {\r\n                console.log('Error fetching messages:', err);\r\n            });\r\n    };\r\n\r\n    const sendMessage = () => {\r\n        if (newMessage.trim() === '') return;\r\n\r\n        const payload = {\r\n            chat_id: chatId,\r\n            user_email: user.email,\r\n            message: newMessage,\r\n            timestamp: new Date().toISOString()\r\n        };\r\n\r\n        axios.post('http://localhost:8081/sendMessage', payload)\r\n            .then(res => {\r\n                console.log('Message sent:', res.data); // Debug log\r\n                setMessages(prevMessages => [...prevMessages, res.data]);\r\n                setNewMessage('');\r\n            })\r\n            .catch(err => {\r\n                console.log('Failed to send message', err);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat-container\">\r\n            <div className=\"messages-container\">\r\n                {messages.map((message, index) => (\r\n                    <div key={index} className=\"message\">\r\n                        <b>{message.user_email === user.email ? 'You' : message.user_email}:</b> {message.message}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <div className=\"input-container\">\r\n                <input\r\n                    type=\"text\"\r\n                    value={newMessage}\r\n                    onChange={e => setNewMessage(e.target.value)}\r\n                    placeholder=\"Type your message...\"\r\n                />\r\n                <button onClick={sendMessage}>Send</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}