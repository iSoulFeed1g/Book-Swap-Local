{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vanja\\\\Desktop\\\\Vanja\\\\GitHub\\\\Book-Swap-Local\\\\frontEnd\\\\src\\\\Pages\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chat({\n  chatId,\n  user\n}) {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [postImage, setPostImage] = useState('');\n  const [postTitle, setPostTitle] = useState('');\n  useEffect(() => {\n    const fetchMessages = async () => {\n      try {\n        const res = await axios.get(`http://localhost:8081/messages/${chatId}`);\n        setMessages(res.data);\n        if (res.data.length > 0) {\n          setPostImage(res.data[0].postImage);\n          setPostTitle(res.data[0].postTitle);\n        }\n      } catch (error) {\n        console.error('Error fetching messages:', error);\n      }\n    };\n    fetchMessages();\n  }, [chatId]);\n  const handleSendMessage = async () => {\n    if (!newMessage.trim()) {\n      return;\n    }\n    const messageData = {\n      chat_id: chatId,\n      user_email: user.email,\n      message: newMessage\n    };\n    try {\n      await axios.post('http://localhost:8081/messages', messageData);\n      setMessages([...messages, messageData]);\n      setNewMessage('');\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [postImage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-image-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: `http://localhost:8081/${postImage}`,\n        alt: postTitle,\n        className: \"post-image-preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: postTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.user_email === user.email ? 'sent' : 'received'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: msg.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"timestamp\",\n          children: new Date(msg.timestamp).toLocaleString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-message-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        placeholder: \"Type your message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n_s(Chat, \"j7g7ToVG0ElKEBdeR6TA/LmO/JA=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Chat","chatId","user","_s","messages","setMessages","newMessage","setNewMessage","postImage","setPostImage","postTitle","setPostTitle","fetchMessages","res","get","data","length","error","console","handleSendMessage","trim","messageData","chat_id","user_email","email","message","post","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","Date","timestamp","toLocaleString","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Vanja/Desktop/Vanja/GitHub/Book-Swap-Local/frontEnd/src/Pages/Chat.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './Chat.css';\r\n\r\nfunction Chat({ chatId, user }) {\r\n    const [messages, setMessages] = useState([]);\r\n    const [newMessage, setNewMessage] = useState('');\r\n    const [postImage, setPostImage] = useState('');\r\n    const [postTitle, setPostTitle] = useState('');\r\n\r\n    useEffect(() => {\r\n        const fetchMessages = async () => {\r\n            try {\r\n                const res = await axios.get(`http://localhost:8081/messages/${chatId}`);\r\n                setMessages(res.data);\r\n\r\n                if (res.data.length > 0) {\r\n                    setPostImage(res.data[0].postImage);\r\n                    setPostTitle(res.data[0].postTitle);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching messages:', error);\r\n            }\r\n        };\r\n\r\n        fetchMessages();\r\n    }, [chatId]);\r\n\r\n    const handleSendMessage = async () => {\r\n        if (!newMessage.trim()) {\r\n            return;\r\n        }\r\n\r\n        const messageData = {\r\n            chat_id: chatId,\r\n            user_email: user.email,\r\n            message: newMessage\r\n        };\r\n\r\n        try {\r\n            await axios.post('http://localhost:8081/messages', messageData);\r\n            setMessages([...messages, messageData]);\r\n            setNewMessage('');\r\n        } catch (error) {\r\n            console.error('Error sending message:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat-container\">\r\n            {postImage && (\r\n                <div className=\"post-image-container\">\r\n                    <img src={`http://localhost:8081/${postImage}`} alt={postTitle} className=\"post-image-preview\" />\r\n                    <h3>{postTitle}</h3>\r\n                </div>\r\n            )}\r\n            <div className=\"messages-container\">\r\n                {messages.map((msg, index) => (\r\n                    <div key={index} className={`message ${msg.user_email === user.email ? 'sent' : 'received'}`}>\r\n                        <p>{msg.message}</p>\r\n                        <span className=\"timestamp\">{new Date(msg.timestamp).toLocaleString()}</span>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <div className=\"new-message-container\">\r\n                <textarea\r\n                    value={newMessage}\r\n                    onChange={(e) => setNewMessage(e.target.value)}\r\n                    placeholder=\"Type your message...\"\r\n                />\r\n                <button onClick={handleSendMessage}>Send</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}