{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vanja\\\\Desktop\\\\Vanja\\\\GitHub\\\\Book-Swap-Local\\\\frontEnd\\\\src\\\\Pages\\\\Post.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Post.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Post({\n  onClick\n}) {\n  _s();\n  const [post, setPost] = useState(null);\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    const userData = localStorage.getItem('user');\n    if (userData) {\n      setUser(JSON.parse(userData));\n    }\n    fetchPost();\n  }, []);\n  const fetchPost = () => {\n    axios.get(`http://localhost:8081/post/${id}`).then(res => {\n      console.log('Fetched post data:', res.data);\n      setPost(res.data);\n    }).catch(err => {\n      console.log(\"Error fetching post:\", err);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-card\",\n    onClick: onClick,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-image-container\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `http://localhost:8081/${post.picture}`,\n        alt: post.title,\n        className: \"post-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"post-title\",\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"post-description\",\n        children: post.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"post-author\",\n        children: [\"Author: \", post.author]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"post-user\",\n        children: [\"Posted by: \", post.user_name || 'Unknown']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"post-price\",\n        children: [\"Price: \\u20AC\", parseFloat(post.price).toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"post-genre\",\n        children: [\"Genre: \", post.genre]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n_s(Post, \"gnZPtmePBINvudOHqvEWzK0OARE=\");\n_c = Post;\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Post","onClick","_s","post","setPost","user","setUser","userData","localStorage","getItem","JSON","parse","fetchPost","axios","get","id","then","res","console","log","data","catch","err","className","children","src","picture","alt","title","fileName","_jsxFileName","lineNumber","columnNumber","description","author","user_name","parseFloat","price","toFixed","genre","_c","$RefreshReg$"],"sources":["C:/Users/Vanja/Desktop/Vanja/GitHub/Book-Swap-Local/frontEnd/src/Pages/Post.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Post.css';\r\n\r\nfunction Post({ onClick }) {\r\n    const [post, setPost] = useState(null);\r\n    const [user, setUser] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const userData = localStorage.getItem('user');\r\n        if (userData) {\r\n            setUser(JSON.parse(userData));\r\n        }\r\n        fetchPost();\r\n    }, []);\r\n    \r\n    const fetchPost = () => {\r\n        axios.get(`http://localhost:8081/post/${id}`)\r\n            .then(res => {\r\n                console.log('Fetched post data:', res.data);\r\n                setPost(res.data);\r\n            })\r\n            .catch(err => {\r\n                console.log(\"Error fetching post:\", err);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className=\"post-card\" onClick={onClick}>\r\n            <div className=\"post-image-container\">\r\n                <img src={`http://localhost:8081/${post.picture}`} alt={post.title} className=\"post-image\" />\r\n            </div>\r\n            <div className=\"post-details\">\r\n                <h3 className=\"post-title\">{post.title}</h3>\r\n                <p className=\"post-description\">{post.description}</p>\r\n                <p className=\"post-author\">Author: {post.author}</p>\r\n                <p className=\"post-user\">Posted by: {post.user_name || 'Unknown'}</p>\r\n                <p className=\"post-price\">Price: â‚¬{parseFloat(post.price).toFixed(2)}</p>\r\n                <p className=\"post-genre\">Genre: {post.genre}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}