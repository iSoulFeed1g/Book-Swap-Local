{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vanja\\\\Desktop\\\\Vanja\\\\GitHub\\\\Book-Swap-Local\\\\frontEnd\\\\src\\\\Pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Post from './Post';\nimport Layout from './Layout';\nimport './Home.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [filteredPosts, setFilteredPosts] = useState([]);\n  const [filter, setFilter] = useState({\n    sortBy: '',\n    genre: ''\n  });\n  const [searchQuery, setSearchQuery] = useState('');\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n  useEffect(() => {\n    applyFilters();\n  }, [filter, searchQuery, posts]);\n  const fetchPosts = async () => {\n    try {\n      const res = await axios.get('http://localhost:8081/posts');\n      setPosts(res.data);\n    } catch (error) {\n      console.error(\"Error fetching posts:\", error);\n    }\n  };\n  const handleSearch = query => {\n    setSearchQuery(query);\n  };\n  const handleFilterChange = filters => {\n    setFilter(filters);\n  };\n  const applyFilters = () => {\n    let filtered = posts;\n    if (searchQuery) {\n      filtered = filtered.filter(post => post.title.toLowerCase().includes(searchQuery.toLowerCase()));\n    }\n    if (filter.genre) {\n      filtered = filtered.filter(post => post.genre === filter.genre);\n    }\n    if (filter.sortBy) {\n      switch (filter.sortBy) {\n        case 'Newest First':\n          filtered = filtered.sort((a, b) => new Date(b.time) - new Date(a.time));\n          break;\n        case 'Oldest First':\n          filtered = filtered.sort((a, b) => new Date(a.time) - new Date(b.time));\n          break;\n        case 'Price Ascending':\n          filtered = filtered.sort((a, b) => a.price - b.price);\n          break;\n        case 'Price Descending':\n          filtered = filtered.sort((a, b) => b.price - a.price);\n          break;\n        default:\n          break;\n      }\n    }\n    setFilteredPosts(filtered);\n  };\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    onSearch: handleSearch,\n    onFilterChange: handleFilterChange,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home-container\",\n      children: filteredPosts.length > 0 ? filteredPosts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n        post: post\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-posts\",\n        children: \"No posts available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n}\n_s(Home, \"/Ho8ztQ38TvGM3IZ8nwFbzgMiPQ=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","axios","Post","Layout","jsxDEV","_jsxDEV","Home","_s","posts","setPosts","filteredPosts","setFilteredPosts","filter","setFilter","sortBy","genre","searchQuery","setSearchQuery","fetchPosts","applyFilters","res","get","data","error","console","handleSearch","query","handleFilterChange","filters","filtered","post","title","toLowerCase","includes","sort","a","b","Date","time","price","onSearch","onFilterChange","children","className","length","map","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Vanja/Desktop/Vanja/GitHub/Book-Swap-Local/frontEnd/src/Pages/Home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Post from './Post';\r\nimport Layout from './Layout';\r\nimport './Home.css';\r\n\r\nfunction Home() {\r\n    const [posts, setPosts] = useState([]);\r\n    const [filteredPosts, setFilteredPosts] = useState([]);\r\n    const [filter, setFilter] = useState({ sortBy: '', genre: '' });\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n\r\n    useEffect(() => {\r\n        fetchPosts();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        applyFilters();\r\n    }, [filter, searchQuery, posts]);\r\n\r\n    const fetchPosts = async () => {\r\n        try {\r\n            const res = await axios.get('http://localhost:8081/posts');\r\n            setPosts(res.data);\r\n        } catch (error) {\r\n            console.error(\"Error fetching posts:\", error);\r\n        }\r\n    };\r\n\r\n    const handleSearch = (query) => {\r\n        setSearchQuery(query);\r\n    };\r\n\r\n    const handleFilterChange = (filters) => {\r\n        setFilter(filters);\r\n    };\r\n\r\n    const applyFilters = () => {\r\n        let filtered = posts;\r\n\r\n        if (searchQuery) {\r\n            filtered = filtered.filter(post => \r\n                post.title.toLowerCase().includes(searchQuery.toLowerCase())\r\n            );\r\n        }\r\n\r\n        if (filter.genre) {\r\n            filtered = filtered.filter(post => post.genre === filter.genre);\r\n        }\r\n\r\n        if (filter.sortBy) {\r\n            switch (filter.sortBy) {\r\n                case 'Newest First':\r\n                    filtered = filtered.sort((a, b) => new Date(b.time) - new Date(a.time));\r\n                    break;\r\n                case 'Oldest First':\r\n                    filtered = filtered.sort((a, b) => new Date(a.time) - new Date(b.time));\r\n                    break;\r\n                case 'Price Ascending':\r\n                    filtered = filtered.sort((a, b) => a.price - b.price);\r\n                    break;\r\n                case 'Price Descending':\r\n                    filtered = filtered.sort((a, b) => b.price - a.price);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n\r\n        setFilteredPosts(filtered);\r\n    };\r\n\r\n    return (\r\n        <Layout onSearch={handleSearch} onFilterChange={handleFilterChange}>\r\n            <div className=\"home-container\">\r\n                {filteredPosts.length > 0 ? (\r\n                    filteredPosts.map(post => (\r\n                        <Post key={post.id} post={post} />\r\n                    ))\r\n                ) : (\r\n                    <div className=\"no-posts\">No posts available</div>\r\n                )}\r\n            </div>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}