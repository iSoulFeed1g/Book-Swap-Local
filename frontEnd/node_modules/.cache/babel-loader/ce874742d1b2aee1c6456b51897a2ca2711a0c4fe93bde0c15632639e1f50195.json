{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vanja\\\\Desktop\\\\Vanja\\\\GitHub\\\\Book-Swap-Local\\\\frontEnd\\\\src\\\\Pages\\\\Inbox.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Inbox.css';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport Layout from './Layout';\nimport Chat from './Chat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Inbox() {\n  _s();\n  const [chats, setChats] = useState([]);\n  const [selectedChat, setSelectedChat] = useState(null);\n  const [hasUnreadMessages, setHasUnreadMessages] = useState(false); // New state for unread messages\n  const {\n    chatId\n  } = useParams();\n  const user = JSON.parse(localStorage.getItem('user'));\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (user && user.id) {\n      axios.get(`http://localhost:8081/inbox/${user.id}`).then(res => {\n        setChats(res.data);\n\n        // Check if any chat has unread messages\n        const unread = res.data.some(chat => chat.lastMessageSender !== user.id && !chat.isRead);\n        setHasUnreadMessages(unread);\n      }).catch(err => {\n        console.error(\"Error fetching inbox:\", err);\n      });\n    }\n  }, [user]);\n  useEffect(() => {\n    if (chatId && chats.length) {\n      const chat = chats.find(chat => chat.id === parseInt(chatId));\n      if (chat) {\n        setSelectedChat(chat);\n      }\n    }\n  }, [chatId, chats]);\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      hasUnreadMessages: hasUnreadMessages,\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"please-login\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Please log in to access your Inbox.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary login-button\",\n            onClick: () => navigate('/login'),\n            children: \"Login / Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this);\n  }\n  const handleChatClick = chat => {\n    setSelectedChat(chat);\n    navigate(`/inbox/${chat.id}`);\n  };\n  const handleSearch = query => {\n    console.log('Search query:', query);\n  };\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    onSearch: handleSearch,\n    hasUnreadMessages: hasUnreadMessages,\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inbox-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inbox-sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Inbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inbox-list\",\n          children: chats.map(chat => chat.name !== user.name && /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => handleChatClick(chat),\n            className: `inbox-item ${selectedChat && selectedChat.id === chat.id ? 'active' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: `http://localhost:8081/${chat.profile_pic}`,\n              alt: chat.name,\n              className: \"inbox-profile-pic\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inbox-text\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: chat.lastMessageSender === user.id ? \"\" : \"bold\",\n                children: chat.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"last-message\",\n                children: chat.lastMessage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 37\n            }, this)]\n          }, chat.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-area\",\n        children: selectedChat ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Chat, {\n            chatId: selectedChat.id,\n            selectedChat: selectedChat\n          }, selectedChat.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"welcome-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Your messages\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Send a message to start a chat.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n_s(Inbox, \"Wv/WyxB33qaYiKp/xqckRCbRsPU=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Inbox;\nexport default Inbox;\nvar _c;\n$RefreshReg$(_c, \"Inbox\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","useNavigate","Layout","Chat","jsxDEV","_jsxDEV","Inbox","_s","chats","setChats","selectedChat","setSelectedChat","hasUnreadMessages","setHasUnreadMessages","chatId","user","JSON","parse","localStorage","getItem","navigate","id","get","then","res","data","unread","some","chat","lastMessageSender","isRead","catch","err","console","error","length","find","parseInt","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","handleChatClick","handleSearch","query","log","onSearch","map","name","src","profile_pic","alt","lastMessage","_c","$RefreshReg$"],"sources":["C:/Users/Vanja/Desktop/Vanja/GitHub/Book-Swap-Local/frontEnd/src/Pages/Inbox.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './Inbox.css';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport Layout from './Layout';\r\nimport Chat from './Chat';\r\n\r\nfunction Inbox() {\r\n    const [chats, setChats] = useState([]);\r\n    const [selectedChat, setSelectedChat] = useState(null);\r\n    const [hasUnreadMessages, setHasUnreadMessages] = useState(false); // New state for unread messages\r\n    const { chatId } = useParams();\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        if (user && user.id) {\r\n            axios.get(`http://localhost:8081/inbox/${user.id}`)\r\n                .then(res => {\r\n                    setChats(res.data);\r\n\r\n                    // Check if any chat has unread messages\r\n                    const unread = res.data.some(chat => chat.lastMessageSender !== user.id && !chat.isRead);\r\n                    setHasUnreadMessages(unread);\r\n                })\r\n                .catch(err => {\r\n                    console.error(\"Error fetching inbox:\", err);\r\n                });\r\n        }\r\n    }, [user]);\r\n\r\n    useEffect(() => {\r\n        if (chatId && chats.length) {\r\n            const chat = chats.find(chat => chat.id === parseInt(chatId));\r\n            if (chat) {\r\n                setSelectedChat(chat);\r\n            }\r\n        }\r\n    }, [chatId, chats]);\r\n\r\n    \r\n\r\n    if (!user) {\r\n        return (\r\n            <Layout hasUnreadMessages={hasUnreadMessages}> {/* Pass the unread messages state */}\r\n                <div className=\"please-login\">\r\n                    <div className=\"login-message\">\r\n                        <p>Please log in to access your Inbox.</p>\r\n                        <button className=\"btn btn-primary login-button\" onClick={() => navigate('/login')}>\r\n                            Login / Sign Up\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </Layout>\r\n        );\r\n    }\r\n\r\n    const handleChatClick = (chat) => {\r\n        setSelectedChat(chat);\r\n        navigate(`/inbox/${chat.id}`);\r\n    };\r\n\r\n    const handleSearch = (query) => {\r\n        console.log('Search query:', query);\r\n    };\r\n\r\n    return (\r\n        <Layout onSearch={handleSearch} hasUnreadMessages={hasUnreadMessages}> {/* Pass the unread messages state */}\r\n            <div className=\"inbox-page\">\r\n                <div className=\"inbox-sidebar\">\r\n                    <h1>Inbox</h1>\r\n                    <div className=\"inbox-list\">\r\n                        {chats.map(chat => (\r\n                            chat.name !== user.name && (\r\n                                <div key={chat.id} onClick={() => handleChatClick(chat)} className={`inbox-item ${selectedChat && selectedChat.id === chat.id ? 'active' : ''}`}>\r\n                                    <img src={`http://localhost:8081/${chat.profile_pic}`} alt={chat.name} className=\"inbox-profile-pic\" />\r\n                                    <div className=\"inbox-text\">\r\n                                        <p className={chat.lastMessageSender === user.id ? \"\" : \"bold\"}>{chat.name}</p>\r\n                                        <p className=\"last-message\">{chat.lastMessage}</p>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n                <div className=\"chat-area\">\r\n                    {selectedChat ? (\r\n                        <div>\r\n                            <Chat key={selectedChat.id} chatId={selectedChat.id} selectedChat={selectedChat} />\r\n                        </div>\r\n                    ) : (\r\n                        <div className=\"welcome-message\">\r\n                            <h2>Your messages</h2>\r\n                            <p>Send a message to start a chat.</p>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default Inbox;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}